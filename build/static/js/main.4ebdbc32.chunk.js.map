{"version":3,"sources":["DrinkComponent.jsx","Drinks.jsx","Login.jsx","Signup.jsx","App.js","serviceWorker.js","index.js"],"names":["DrinkComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateName","index","e","cocktails","parent","state","i","length","name","target","value","setState","updateAlcohol","console","log","alcohol","updateMixer","mixer","updatePrice","price","parseInt","handleSubmit","event","preventDefault","formData","FormData","imagefile","document","querySelector","concat","append","files","axios","post","headers","Content-Type","then","image","data","catch","err","alert","pictures","error","onDrop","bind","assertThisInitialized","fileInput","React","createRef","imageRef","submitRef","_this$props","picture","_this2","_this$state","_this$props2","alcArray","mixArray","inputBoxStyle","width","react_default","a","createElement","className","style","onSubmit","display","type","id","accept","onChange","current","click","ref","height","onClick","src","maxLength","color","textAlign","deleteDrink","Component","Drinks","setMessage","message","setTimeout","getMachines","userToken","get","res","machineList","generateDrinks","machine","isLoaded","drink","j","push","defineProperty","time","forEach","cocktail","Math","floor","random","drinkList","addDrinkComponent","alc1","mix1","newList","container","cancel","time1","time2","time3","time4","deleteIndex","splice","saveMachine","_this$state2","v","finishedJSON","_loop","curObj","coc","jsonString","JSON","stringify","fieldInput","machineID","alc2","alc3","alc4","mix2","mix3","mix4","_this$setState2","inputHandler","alcohols","_this$state3","buttons","drinks","map","key","src_DrinkComponent","disabled","Login","emailHandler","email","passwordHandler","password","submitHandler","setToken","token","setDisplay","aria-label","aria-describedby","Signup","registerUser","Password","ConfirmPswrd","PswrdError","Email","params","networkresponse","userId","UserId","App","setUser","user","screen","src_Login","src_Signup","src_Drinks","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ebdbc32.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./drinkComponent.css\";\nimport axios from 'axios';\n\nclass DrinkComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pictures: [],\n      name: '',\n      price: '',\n      alcohol: '',\n      mixer: '',\n      error: '',\n      image: '/images/uploads/b98d337e481b663b75c3b348e1ef71cbc614d83e.jpg',\n    };\n\n    this.onDrop = this.onDrop.bind(this);\n\n    this.fileInput = React.createRef();\n    this.imageRef = React.createRef();\n    this.submitRef = React.createRef();\n\n  }\n\n  componentWillMount() {\n    let { name, alcohol, mixer, price, image } = this.props;\n\n    if (name) this.setState({ name: name });\n    if (alcohol) this.setState({ alcohol: alcohol });\n    if (mixer) this.setState({ mixer: mixer });\n    if (price) this.setState({ price: price });\n    if (image) this.setState({ image: image });\n\n  }\n\n  onDrop(picture) {\n    this.setState({\n      pictures: this.state.pictures.concat(picture),\n    });\n  }\n\n  updateName = (index, e) => {\n    let { cocktails } = this.props.parent.state;\n\n    for (let i = 0; i < cocktails.length; ++i) {\n      if (cocktails[i].index === index) {\n        index = i;\n        break;\n      }\n    }\n    cocktails[index].name = e.target.value;\n    this.props.parent.setState({ cocktails: cocktails })\n    this.setState({ name: cocktails[index].name })\n  }\n  updateAlcohol = (index, e) => {\n    let { cocktails } = this.props.parent.state;\n    console.log(e.target.value);\n\n    for (let i = 0; i < cocktails.length; ++i) {\n      if (cocktails[i].index === index) {\n        index = i;\n        break;\n      }\n    }\n    cocktails[index].alcohol.name = e.target.value;\n    this.props.parent.setState({ cocktails: cocktails })\n    this.setState({ alcohol: cocktails[index].alcohol.name })\n  }\n  updateMixer = (index, e) => {\n    let { cocktails } = this.props.parent.state;\n\n    for (let i = 0; i < cocktails.length; ++i) {\n      if (cocktails[i].index === index) {\n        index = i;\n        break;\n      }\n    }\n    cocktails[index].mixer.name = e.target.value;\n    this.props.parent.setState({ cocktails: cocktails })\n    this.setState({ mixer: cocktails[index].mixer.name })\n  }\n  updatePrice = (index, e) => {\n    let { cocktails } = this.props.parent.state;\n\n    for (let i = 0; i < cocktails.length; ++i) {\n      if (cocktails[i].index === index) {\n        index = i;\n        break;\n      }\n    }\n\n    // let priceInt = parseFloat(e.target.value).toString();\n    // if (priceInt.length != e.target.value.length)\n    //   this.setState({ error: \"Bad price characters\" });\n    // else\n    //   this.setState({ error: \"\" });\n\n    if (e.target.value > 0) {\n      cocktails[index].price = parseInt(e.target.value);\n    }\n    else {\n      cocktails[index].price = e.target.value;\n    }\n\n    this.props.parent.setState({ cocktails: cocktails })\n    this.setState({ price: cocktails[index].price })\n  }\n\n  handleSubmit = (index, event) => {\n    event.preventDefault();\n\n    let { cocktails } = this.props.parent.state;\n\n    var formData = new FormData();\n    var imagefile = document.querySelector(`#file${this.props.index}`);\n    formData.append(\"image\", imagefile.files[0]);\n    axios.post('/api/image', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n      .then(image => {\n        console.log(image.data);\n\n        for (let i = 0; i < cocktails.length; ++i) {\n          if (cocktails[i].index === index) {\n            index = i;\n            break;\n          }\n        }\n\n        cocktails[index].image = image.data;\n        this.props.parent.setState({ cocktails: cocktails })\n\n        this.setState({\n          image: image.data,\n        })\n      })\n      .catch(err => {\n        alert('Files must be less than 1 MB');\n      })\n  }\n\n  render() {\n    let { name, alcohol, mixer, price, image } = this.state;\n    const { alcArray, mixArray, index } = this.props;\n\n    const inputBoxStyle = {\n      width: '80%',\n    }\n\n    const rootDivStyle = {\n      width: '300px',\n    }\n\n    return (\n      <div className=\"container border border-primary rounded mt-5 mb-3\" style={rootDivStyle}>\n\n\n        {/* Hidden */}\n        <form\n          onSubmit={(e) => this.handleSubmit(this.props.index, e)}\n          style={{ display: 'none' }}\n        >\n          <input type=\"file\"\n            name=\"img\"\n            id={`file${this.props.index}`}\n            accept=\"image/png, image/jpeg\"\n            onChange={() => this.submitRef.current.click()}\n            ref={this.fileInput}\n          />\n          <button\n            ref={this.submitRef}\n            type=\"submit\">Submit</button>\n        </form>\n        {/* Hidden */}\n\n        <div className=\"row justify-content-center mt-3\">\n          <div\n            className=\"border justify-content-center text-center\"\n            style={{ width: '200px', height: '200px' }}\n            onClick={() => this.fileInput.current.click()}\n          >\n            <img src={image} />\n          </div>\n        </div>\n\n        <div className=\"row justify-content-center mt-3\">\n          Cocktail Name:\n        </div>\n\n        <div className=\"row justify-content-center\">\n          <input\n            value={name}\n            onChange={(e) => this.updateName(this.props.index, e)}\n            style={inputBoxStyle}\n          />\n        </div>\n\n        <div className=\"row justify-content-center\">\n          Alcohol:\n          </div>\n\n        <div className=\"row justify-content-center\">\n          <select\n            value={alcohol}\n            onChange={(e) => this.updateAlcohol(index, e)}\n            style={inputBoxStyle}\n          >\n            <option value={alcArray[0]}>{alcArray[0]}</option>\n            <option value={alcArray[1]}>{alcArray[1]}</option>\n            <option value={alcArray[2]}>{alcArray[2]}</option>\n            <option value={alcArray[3]}>{alcArray[3]}</option>\n          </select>\n        </div>\n\n        <div className=\"row justify-content-center\">\n          Mixer\n          </div>\n\n        <div className=\"row justify-content-center\">\n          <select\n            value={mixer}\n            onChange={(e) => this.updateMixer(index, e)}\n            style={inputBoxStyle}\n          >\n            <option value={mixArray[0]}>{mixArray[0]}</option>\n            <option value={mixArray[1]}>{mixArray[1]}</option>\n            <option value={mixArray[2]}>{mixArray[2]}</option>\n            <option value={mixArray[3]}>{mixArray[3]}</option>\n          </select>\n        </div>\n\n        <div className=\"row justify-content-center\">\n          Cocktail Price:\n        </div>\n\n        <div className=\"row justify-content-center\">\n          <input\n            className=\"input\"\n            value={price}\n            onChange={(e) => this.updatePrice(this.props.index, e)}\n            maxLength=\"8\"\n            style={inputBoxStyle}\n          />\n        </div>\n\n        <div className=\"row justify-content-center mt-3 mb-3\">\n          <h5 style={{ color: 'red', textAlign: 'center', }}>{this.state.error}</h5>\n          <button onClick={(e) => this.props.parent.deleteDrink(this.props.index, e)}>Remove</button>\n        </div>\n\n      </div >\n    );\n  }\n\n}\n\nexport default DrinkComponent; ","import React, { Component } from 'react';\nimport DrinkComponent from './DrinkComponent.jsx';\nimport \"./drinkComponent.css\";\nimport axios from 'axios';\nclass Drinks extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            machine: 'Select',\n            alcohols: ['', '', '', ''],\n            machineList: [],\n            drinkList: [],\n            alc1: '',\n            alc2: '',\n            alc3: '',\n            alc4: '',\n            mix1: '',\n            mix2: '',\n            mix3: '',\n            mix4: '',\n            time1: '',\n            time2: '',\n            time3: '',\n            time4: '',\n            userToken: null,\n            cocktails: [],\n            message: null,\n        }\n    }\n\n    componentDidMount() {\n        this.getMachines();\n    }\n\n    setMessage = (message) => {\n        this.setState({\n            message: message,\n        });\n\n        setTimeout(() => {\n            this.setState({\n                message: null,\n            });\n        }, 3000)\n    }\n\n    getMachines = () => {\n        let { userToken } = this.props;\n        axios.get(`/api/machines/${userToken}`)\n            .then((res) => {\n                this.setState({\n                    machineList: res.data,\n                });\n                console.log(res.data);\n            })\n    }\n    generateDrinks = () => {\n        if (this.state.machine !== 'Select') {\n            this.setState({ isLoaded: !this.state.isLoaded })\n            axios.get(`/api/cocktails/${this.state.machine}`)\n                .then((res) => {\n                    console.log(res.data);\n                    let drink = res.data;\n                    let index = 0;\n                    let cocktails = []\n                    for (let i = 0; i < drink.length; i++) {\n                        for (let j = 0; j < drink[i].cocktails.length; j++) {\n                            cocktails.push(drink[i].cocktails[j]);\n                            this.setState({\n                                [`time${j + 1}`]: drink[i].cocktails[j].mixer.time,\n                            });\n                        }\n                    }\n                    cocktails.forEach(cocktail => {\n                        // cocktail.index = index++;\n                        cocktail.index = Math.floor(Math.random() * 500000);\n                    });\n                    // let {cocktails} = this.state;\n                    // for(let i = 0; i<drinks.length; i++){\n\n                    // }\n                    this.setState({\n                        cocktails: cocktails,\n                        drinkList: res.data,\n                    })\n                })\n                .catch((e) => {\n                    console.log(e);\n                })\n        }\n    }\n    addDrinkComponent = () => {\n        let { cocktails, alc1, mix1 } = this.state;\n        if (cocktails.length > 1) {\n            let newList = [{\n                name: '',\n                price: 0,\n                alcohol: {\n                    name: alc1,\n                    container: 0\n                },\n                mixer: {\n                    name: mix1,\n                    container: 0,\n                    time: 0,\n                },\n                image: null,\n                index: Math.floor(Math.random() * 500000),\n            }];\n            this.setState({\n                cocktails: newList.concat(cocktails),\n            });\n        }\n    }\n\n    cancel = () => {\n        this.setState({\n            cocktails: [],\n            isLoaded: false,\n            time1: '',\n            time2: '',\n            time3: '',\n            time4: '',\n        })\n    }\n\n    //Todo\n    deleteDrink = (index) => {\n        let { cocktails } = this.state;\n        console.log(\"Deleting: \" + index);\n        let deleteIndex = 0;\n\n        for (let i = 0; i < cocktails.length; ++i) {\n            if (cocktails[i].index === index) {\n                console.log('Found drink at ' + i);\n                deleteIndex = i;\n                break;\n            }\n        }\n\n        cocktails.splice(deleteIndex, 1);\n        this.setState({\n            cocktails: cocktails,\n        })\n    }\n    //Todo\n    saveMachine = () => {\n        let { cocktails, machine } = this.state;\n        // this.setState({ isLoaded: !this.state.isLoaded, machine: 'Select' })\n        console.log(cocktails);\n        cocktails.forEach(function (v) { delete v.index });\n        // drinkList.forEach();\n        let finishedJSON = [];\n        for (let i = 0; i < 4; ++i) {\n            let curObj = {};\n            curObj.alcohol = this.state[`alc${i + 1}`];\n            let coc = [];\n            cocktails.forEach(cocktail => {\n                if (cocktail.alcohol.name === curObj.alcohol)\n                    coc.push(cocktail);\n                if (cocktail.mixer.name === this.state[`mix${i + 1}`])\n                    cocktail.mixer.time = this.state[`time${i + 1}`];\n            });\n            curObj.cocktails = coc;\n            finishedJSON.push(curObj);\n        }\n        console.log(finishedJSON);\n        const jsonString = JSON.stringify(finishedJSON);\n\n        axios.post(`/api/cocktails/${machine}`, {\n            cocktails: jsonString\n        })\n            .then((res) => {\n                console.log(res.data);\n                this.cancel();\n                this.setMessage('Cocktails added');\n            })\n    }\n\n\n    fieldInput = (e) => {\n\n        let { machineList } = this.state;\n        let machineID = e.target.value;\n        if (machineID === 'Select') {\n            this.setState({\n                machine: 'Select',\n                alc1: '',\n                alc2: '',\n                alc3: '',\n                alc4: '',\n                mix1: '',\n                mix2: '',\n                mix3: '',\n                mix4: '',\n                time1: '',\n                time2: '',\n                time3: '',\n                time4: '',\n            })\n        }\n        else {\n            this.setState({ machine: machineID, cocktails: [] });\n            for (let i = 0; i < machineList.length; i++) {\n                if (machineList[i].id === parseInt(machineID)) {\n                    for (let j = 0; j < 4; j++) {\n                        this.setState({\n                            [`alc${j + 1}`]: machineList[i].alcohol[j].name,\n                            [`mix${j + 1}`]: machineList[i].mixer[j].name,\n                        })\n                    }\n                }\n            }\n        }\n    }\n    inputHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    render() {\n        const { machineList, cocktails } = this.state;\n\n        let buttons =\n            <div className=\"row mt-4 justify-content-center\">\n                <button onClick={this.cancel} className=\" btn btn-primary btn-sm col-sm-1 mr-4\">Cancel</button>\n                <button onClick={this.addDrinkComponent} className=\" btn btn-primary btn-sm col-sm-1 mr-4\">Add Cocktail</button>\n                <button onClick={this.saveMachine} className=\"btn btn-primary btn-lsm col-sm-1 mr-4\">Save</button>\n            </div>\n\n        if (cocktails.length == 0)\n            buttons =\n                <div className=\"row mt-4 justify-content-center\">\n                    <button onClick={this.generateDrinks} className=\" btn btn-primary btn-sm col-sm-1 mr-4\">Apply</button>\n                </div>\n\n        let alcArray = [];\n        let mixArray = [];\n        for (let i = 1; i <= 4; ++i) {\n            alcArray.push(this.state[`alc${i}`])\n            mixArray.push(this.state[`mix${i}`])\n        }\n        const drinks = cocktails.map((cocktail, i) => {\n            return (\n                <div className=\"col\" key={cocktail.index}>\n                    <DrinkComponent\n                        name={cocktail.name}\n                        alcohol={cocktail.alcohol.name}\n                        alcArray={alcArray}\n                        mixer={cocktail.mixer.name}\n                        mixArray={mixArray}\n                        price={cocktail.price}\n                        image={cocktail.image}\n                        parent={this}\n                        index={cocktail.index}\n                    />\n                </div>\n            )\n        })\n\n\n        return (\n            <div className=\"container\">\n                <div className=\"border-bottom border-top mt-3 border-info pt-4 pb-4\">\n                    <select onChange={(e) => { this.fieldInput(e) }} value={this.state.machine}>\n                        <option value=\"Select\">Select</option>\n                        {machineList.map((machine) => {\n                            return (\n                                <option key={machine.id} value={machine.id}>\n                                    {\"Machine \" + machine.id}\n                                </option>\n                            );\n                        })}\n                    </select>\n                    <div className=\"row\">\n                        <div className=\"col\">Alcohol Container 1</div>\n                        <div className=\"col\">Alcohol Container 2</div>\n                        <div className=\"col\">Alcohol Container 3</div>\n                        <div className=\"col\">Alcohol Container 3</div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\"><input value={this.state.alc1} disabled={this.state.isLoaded} name='alc1' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.alc2} disabled={this.state.isLoaded} name='alc2' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.alc3} disabled={this.state.isLoaded} name='alc3' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.alc4} disabled={this.state.isLoaded} name='alc4' onChange={this.inputHandler} /></div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">Mixer Container 1</div>\n                        <div className=\"col\">Mixer Container 2</div>\n                        <div className=\"col\">Mixer Container 3</div>\n                        <div className=\"col\">Mixer Container 3</div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\"><input value={this.state.mix1} disabled={this.state.isLoaded} name='mix1' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.mix2} disabled={this.state.isLoaded} name='mix2' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.mix3} disabled={this.state.isLoaded} name='mix3' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.mix4} disabled={this.state.isLoaded} name='mix4' onChange={this.inputHandler} /></div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">Mixer 1 Pour Time</div>\n                        <div className=\"col\">Mixer 2 Pour Time</div>\n                        <div className=\"col\">Mixer 3 Pour Time</div>\n                        <div className=\"col\">Mixer 4 Pour Time</div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\"><input value={this.state.time1} disabled={!this.state.isLoaded} name='time1' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.time2} disabled={!this.state.isLoaded} name='time2' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.time3} disabled={!this.state.isLoaded} name='time3' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.time4} disabled={!this.state.isLoaded} name='time4' onChange={this.inputHandler} /></div>\n                    </div>\n                    <div className=\"row mt-3\">\n                        <div className=\"col h1 text-danger text-center\">\n                            {this.state.message}\n                        </div>\n                    </div>\n                </div>\n                {buttons}\n                <div>\n                    <div className=\"row\">\n                        {drinks}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Drinks;\n","import React, { Component } from 'react';\nimport './login-signup.css'\nimport axios from 'axios';\n// import { connect } from \"react-redux\";\n// import { setToken } from \"./actions/tokenActions\";\n\n// const mapStateToProps = state => {\n//     return { token: state.token };\n// };\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         setToken: (token) => dispatch(setToken(token)),\n//     };\n// }\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            message: null,\n        }\n\n    }\n\n    setMessage = (message) => {\n        this.setState({\n            message: message,\n        });\n\n        setTimeout(() => {\n            this.setState({\n                message: null,\n            });\n        }, 3000)\n    }\n\n    emailHandler = (e) => {\n        this.setState({\n            email: e.target.value,\n        });\n    }\n\n    passwordHandler = (e) => {\n        this.setState({\n            password: e.target.value,\n        });\n    }\n\n    submitHandler = (e) => {\n        let { email, password } = this.state;\n        axios.post('/api/users', {\n            email: email,\n            password: password,\n        })\n            .then(res => {\n                this.props.setToken(res.data.token);\n                this.props.setDisplay(parseInt('2'));\n            })\n            .catch(err => {\n                console.log(err);\n                this.setMessage('Invalid email/password');\n            });\n\n        e.preventDefault();\n    }\n\n    render() {\n        return (\n\n            <div className=\"container mt-5 p-5 border rounded\">\n                <div className=\"row\">\n                    <div className=\"col-sm text-center h2\">\n                        Login\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm\">\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Email</span>\n                            </div>\n                            <input type=\"text\" value={this.state.email} onChange={this.emailHandler} className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm\">\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Password</span>\n                            </div>\n                            <input type=\"password\" value={this.state.password} onChange={this.passwordHandler} className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm\">\n                        <button type=\"submit\" onClick={this.submitHandler} className=\"btn btn-primary btn-lg float-right\">Login</button>\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm mt-3 text-danger h2 text-center\">\n                        {this.state.message}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\nexport default Login;\n//export default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\nimport './login-signup.css';\nimport axios from 'axios';\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            Email: '',\n            Password: '',\n            ConfirmPswrd: '',\n            PswrdError: false,\n            UserId: '',\n        }\n\n    }\n\n    registerUser = () => {\n        let { Password, ConfirmPswrd, PswrdError, Email } = this.state;\n        if (Password === ConfirmPswrd) {\n            console.log(Password + ConfirmPswrd)\n            axios.post('/signup', {\n                params: {\n                    email: Email,\n                    password: Password,\n                }\n            })\n                //    axios.post(`/signup?email=${Email}&password=${Password}`)\n                .then((networkresponse) => {\n                    let userId = networkresponse.data;\n                    this.setState({\n                        UserId: userId,\n                    })\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n        }\n        else {\n            PswrdError = true;\n            console.log(\"Password do not match \" + PswrdError);\n        }\n\n\n    }\n\n    render() {\n        return (\n            <div className=\"SignUpFrame\">\n                {this.state.UserId}\n                Email\n                <span style={{ display: 'block' }}>\n                    <input value={this.state.Email} onChange={(e) => {\n                        this.setState({ Email: e.target.value })\n                    }} />\n                </span>\n                Password\n                <span style={{ display: 'block' }}>\n                    <input type='password' value={this.state.Password} onChange={(e) => {\n                        this.setState({ Password: e.target.value })\n                    }} />\n                </span>\n                Confirm Password\n                <span style={{ display: 'block' }}>\n                    <input type='password' value={this.state.ConfirmPswrd} onChange={(e) => {\n                        this.setState({ ConfirmPswrd: e.target.value })\n                    }} />\n                </span>\n                <button onClick={this.registerUser}>Register</button>\n            </div>\n        )\n    }\n\n}\nexport default Signup;","import React, { Component } from 'react';\n//import { connect } from \"react-redux\";\n//import { setToken } from \"./actions/tokenActions\";\nimport './App.css';\nimport Drinks from './Drinks.jsx';\nimport Login from './Login.jsx';\nimport Signup from './Signup.jsx';\n\n\n\n// const mapStateToProps = state => {\n//   return {token: state.usertoken.token };\n// }\n\n// function mapDispatchToProps(dispatch) {\n//   return {setToken: (token) => dispatch(setToken(token))};\n// }\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      token: '',\n      screen: 0,\n      user: null,\n    }\n  }\n\n  setUser = (user) => {\n    this.setState({\n      user: user,\n    })\n  }\n  setToken = (token) =>{\n    console.log(\"Token from child: \" + token);\n    this.setState({\n      token: token,\n    });\n  }\n  setDisplay = (display) =>{\n    console.log(\"Display from child: \" + display);\n    this.setState({\n      screen: display,\n    })\n  }\n\n  render() {\n    let { screen } = this.state;\n    let display;\n\n    // eslint-disable-next-line default-case\n    switch (screen) {\n      case 0:\n        display = <Login setToken={this.setToken} setDisplay={this.setDisplay} />;\n        break;\n      case 1:\n        display = <Signup />;\n        break;\n      case 2:\n        display = <Drinks userToken={this.state.token}/>\n        break;\n    }\n\n    return (\n      <div>\n        {display}\n      </div>\n    );\n  }\n}\nexport default App;\n//export default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}