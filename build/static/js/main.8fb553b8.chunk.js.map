{"version":3,"sources":["DrinkComponent.jsx","Drinks.jsx","Login.jsx","Signup.jsx","App.js","serviceWorker.js","index.js"],"names":["DrinkComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateName","index","e","cocktails","parent","state","i","length","name","target","value","setState","updateAlcohol","console","log","alcohol","updateMixer","mixer","container","updatePrice","price","parseInt","handleSubmit","event","preventDefault","formData","FormData","imagefile","document","querySelector","concat","append","files","axios","post","headers","Content-Type","then","image","data","catch","err","alert","pictures","error","onDrop","bind","assertThisInitialized","fileInput","React","createRef","imageRef","submitRef","_this$props","alcoholFound","mixerFound","alc1","mix1","picture","_this2","_this$state","_this$props2","alcArray","mixArray","inputBoxStyle","width","react_default","a","createElement","className","style","onSubmit","display","type","id","accept","onChange","current","click","ref","height","onClick","src","maxLength","color","textAlign","deleteDrink","Component","Drinks","setMessage","message","setTimeout","getMachines","userToken","get","res","machineList","generateDrinks","machine","isLoaded","drink","j","push","defineProperty","time","forEach","cocktail","Math","floor","random","drinkList","addDrinkComponent","newList","cancel","time1","time2","time3","time4","deleteIndex","splice","saveMachine","_this$state2","v","alcoholList","mixerList","finishedJSON","_loop","curObj","coc","parseFloat","jsonString","JSON","stringify","alcString","mixString","fieldInput","machineID","alc2","alc3","alc4","mix2","mix3","mix4","_this$setState2","inputHandler","alcohols","_this$state3","buttons","drinks","map","key","src_DrinkComponent","disabled","Login","emailHandler","email","passwordHandler","password","submitHandler","setToken","token","setDisplay","aria-label","aria-describedby","Signup","registerUser","Password","ConfirmPswrd","PswrdError","Email","params","networkresponse","userId","UserId","App","setUser","user","screen","src_Login","src_Signup","src_Drinks","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fb553b8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./drinkComponent.css\";\nimport axios from 'axios';\n\nclass DrinkComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pictures: [],\n      name: '',\n      price: '',\n      alcohol: '',\n      mixer: '',\n      error: '',\n      image: '/images/uploads/b98d337e481b663b75c3b348e1ef71cbc614d83e.jpg',\n    };\n\n    this.onDrop = this.onDrop.bind(this);\n\n    this.fileInput = React.createRef();\n    this.imageRef = React.createRef();\n    this.submitRef = React.createRef();\n\n  }\n\n  componentWillMount() {\n    let { name, alcohol, mixer, price, image, parent } = this.props;\n\n    if (name) this.setState({ name: name });\n    if (alcohol) this.setState({ alcohol: alcohol });\n    if (mixer) this.setState({ mixer: mixer });\n    if (price) this.setState({ price: price });\n    if (image) this.setState({ image: image });\n\n    let alcoholFound = false;\n    let mixerFound = false;\n    for (let i = 1; i <= 4; ++i) {\n      if (parent.state[`alc${i}`] === alcohol)\n        alcoholFound = true;\n      if (parent.state[`mix${i}`] === mixer)\n        mixerFound = true;\n    }\n    console.log('alcoholFound: ' + alcoholFound);\n\n    if (alcoholFound == false)\n      this.setState({\n        alcohol: parent.state.alc1,\n      })\n    if (mixerFound == false)\n      this.setState({\n        mixer: parent.state.mix1,\n      })\n\n  }\n\n  onDrop(picture) {\n    this.setState({\n      pictures: this.state.pictures.concat(picture),\n    });\n  }\n\n  updateName = (index, e) => {\n    let { cocktails } = this.props.parent.state;\n\n    for (let i = 0; i < cocktails.length; ++i) {\n      if (cocktails[i].index === index) {\n        index = i;\n        break;\n      }\n    }\n    cocktails[index].name = e.target.value;\n    this.props.parent.setState({ cocktails: cocktails })\n    this.setState({ name: cocktails[index].name })\n  }\n  updateAlcohol = (index, e) => {\n    let { cocktails } = this.props.parent.state;\n    console.log(e.target.value);\n\n    for (let i = 0; i < cocktails.length; ++i) {\n      if (cocktails[i].index === index) {\n        index = i;\n        break;\n      }\n    }\n    cocktails[index].alcohol.name = e.target.value;\n    this.props.parent.setState({ cocktails: cocktails })\n    this.setState({ alcohol: cocktails[index].alcohol.name })\n  }\n  updateMixer = (index, e) => {\n    let { cocktails } = this.props.parent.state;\n\n    for (let i = 0; i < cocktails.length; ++i) {\n      if (cocktails[i].index === index) {\n        index = i;\n        break;\n      }\n    }\n    cocktails[index].mixer.name = e.target.value;\n    cocktails[index].mixer.container = index\n    this.props.parent.setState({ cocktails: cocktails })\n    this.setState({ mixer: cocktails[index].mixer.name })\n  }\n  updatePrice = (index, e) => {\n    let { cocktails } = this.props.parent.state;\n\n    for (let i = 0; i < cocktails.length; ++i) {\n      if (cocktails[i].index === index) {\n        index = i;\n        break;\n      }\n    }\n\n    // let priceInt = parseFloat(e.target.value).toString();\n    // if (priceInt.length != e.target.value.length)\n    //   this.setState({ error: \"Bad price characters\" });\n    // else\n    //   this.setState({ error: \"\" });\n\n    if (e.target.value > 0) {\n      cocktails[index].price = parseInt(e.target.value);\n    }\n    else {\n      cocktails[index].price = e.target.value;\n    }\n\n    this.props.parent.setState({ cocktails: cocktails })\n    this.setState({ price: cocktails[index].price })\n  }\n\n  handleSubmit = (index, event) => {\n    event.preventDefault();\n\n    let { cocktails } = this.props.parent.state;\n\n    var formData = new FormData();\n    var imagefile = document.querySelector(`#file${this.props.index}`);\n    formData.append(\"image\", imagefile.files[0]);\n    axios.post('/api/image', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n      .then(image => {\n        console.log(image.data);\n\n        for (let i = 0; i < cocktails.length; ++i) {\n          if (cocktails[i].index === index) {\n            index = i;\n            break;\n          }\n        }\n\n        cocktails[index].image = image.data;\n        this.props.parent.setState({ cocktails: cocktails })\n\n        this.setState({\n          image: image.data,\n        })\n      })\n      .catch(err => {\n        alert('Files must be less than 1 MB');\n      })\n  }\n\n  render() {\n    let { name, alcohol, mixer, price, image } = this.state;\n    const { alcArray, mixArray, index } = this.props;\n\n    const inputBoxStyle = {\n      width: '80%',\n    }\n\n    const rootDivStyle = {\n      width: '300px',\n    }\n\n    return (\n      <div className=\"container border border-primary rounded mt-5 mb-3\" style={rootDivStyle}>\n\n\n        {/* Hidden */}\n        <form\n          onSubmit={(e) => this.handleSubmit(this.props.index, e)}\n          style={{ display: 'none' }}\n        >\n          <input type=\"file\"\n            name=\"img\"\n            id={`file${this.props.index}`}\n            accept=\"image/png, image/jpeg\"\n            onChange={() => this.submitRef.current.click()}\n            ref={this.fileInput}\n          />\n          <button\n            ref={this.submitRef}\n            type=\"submit\">Submit</button>\n        </form>\n        {/* Hidden */}\n\n        <div className=\"row justify-content-center mt-3\">\n          <div\n            className=\"border justify-content-center text-center\"\n            style={{ width: '200px', height: '200px' }}\n            onClick={() => this.fileInput.current.click()}\n          >\n            <img src={image} />\n          </div>\n        </div>\n\n        <div className=\"row justify-content-center mt-3\">\n          Cocktail Name:\n        </div>\n\n        <div className=\"row justify-content-center\">\n          <input\n            value={name}\n            onChange={(e) => this.updateName(this.props.index, e)}\n            style={inputBoxStyle}\n          />\n        </div>\n\n        <div className=\"row justify-content-center\">\n          Alcohol:\n          </div>\n\n        <div className=\"row justify-content-center\">\n          <select\n            value={alcohol}\n            onChange={(e) => this.updateAlcohol(index, e)}\n            style={inputBoxStyle}\n          >\n            <option value={alcArray[0]}>{alcArray[0]}</option>\n            <option value={alcArray[1]}>{alcArray[1]}</option>\n            <option value={alcArray[2]}>{alcArray[2]}</option>\n            <option value={alcArray[3]}>{alcArray[3]}</option>\n          </select>\n        </div>\n\n        <div className=\"row justify-content-center\">\n          Mixer\n          </div>\n\n        <div className=\"row justify-content-center\">\n          <select\n            value={mixer}\n            onChange={(e) => this.updateMixer(index, e)}\n            style={inputBoxStyle}\n          >\n            <option value={mixArray[0]}>{mixArray[0]}</option>\n            <option value={mixArray[1]}>{mixArray[1]}</option>\n            <option value={mixArray[2]}>{mixArray[2]}</option>\n            <option value={mixArray[3]}>{mixArray[3]}</option>\n          </select>\n        </div>\n\n        <div className=\"row justify-content-center\">\n          Cocktail Price:\n        </div>\n\n        <div className=\"row justify-content-center\">\n          <input\n            className=\"input\"\n            value={price}\n            onChange={(e) => this.updatePrice(this.props.index, e)}\n            maxLength=\"8\"\n            style={inputBoxStyle}\n          />\n        </div>\n\n        <div className=\"row justify-content-center mt-3 mb-3\">\n          <h5 style={{ color: 'red', textAlign: 'center', }}>{this.state.error}</h5>\n          <button onClick={(e) => this.props.parent.deleteDrink(this.props.index, e)}>Remove</button>\n        </div>\n\n      </div >\n    );\n  }\n\n}\n\nexport default DrinkComponent; ","import React, { Component } from 'react';\nimport DrinkComponent from './DrinkComponent.jsx';\nimport \"./drinkComponent.css\";\nimport axios from 'axios';\nclass Drinks extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            machine: 'Select',\n            alcohols: ['', '', '', ''],\n            machineList: [],\n            drinkList: [],\n            alc1: '',\n            alc2: '',\n            alc3: '',\n            alc4: '',\n            mix1: '',\n            mix2: '',\n            mix3: '',\n            mix4: '',\n            time1: 5.0,\n            time2: 5.0,\n            time3: 5.0,\n            time4: 5.0,\n            userToken: null,\n            cocktails: [],\n            message: null,\n        }\n    }\n\n    componentDidMount() {\n        this.getMachines();\n    }\n\n    setMessage = (message) => {\n        this.setState({\n            message: message,\n        });\n\n        setTimeout(() => {\n            this.setState({\n                message: null,\n            });\n        }, 3000)\n    }\n\n    getMachines = () => {\n        let { userToken } = this.props;\n        axios.get(`/api/machines/${userToken}`)\n            .then((res) => {\n                this.setState({\n                    machineList: res.data,\n                });\n                console.log(res.data);\n            })\n    }\n    generateDrinks = () => {\n        if (this.state.machine !== 'Select') {\n            this.setState({ isLoaded: !this.state.isLoaded })\n            axios.get(`/api/cocktails/${this.state.machine}`)\n                .then((res) => {\n                    console.log(res.data);\n                    let drink = res.data;\n                    let index = 0;\n                    let cocktails = []\n                    for (let i = 0; i < drink.length; i++) {\n                        for (let j = 0; j < drink[i].cocktails.length; j++) {\n                            cocktails.push(drink[i].cocktails[j]);\n                            this.setState({\n                                [`time${j + 1}`]: drink[i].cocktails[j].mixer.time,\n                            });\n                        }\n                    }\n                    cocktails.forEach(cocktail => {\n                        // cocktail.index = index++;\n                        cocktail.index = Math.floor(Math.random() * 500000);\n                    });\n                    // let {cocktails} = this.state;\n                    // for(let i = 0; i<drinks.length; i++){\n\n                    // }\n                    this.setState({\n                        cocktails: cocktails,\n                        drinkList: res.data,\n                    })\n                })\n                .catch((e) => {\n                    console.log(e);\n                })\n        }\n    }\n    addDrinkComponent = () => {\n        let { cocktails, alc1, mix1 } = this.state;\n        if (cocktails.length > 1) {\n            let newList = [{\n                name: '',\n                price: 0,\n                alcohol: {\n                    name: alc1,\n                    container: 0\n                },\n                mixer: {\n                    name: mix1,\n                    container: 0,\n                    time: 0,\n                },\n                image: null,\n                index: Math.floor(Math.random() * 500000),\n            }];\n            this.setState({\n                cocktails: newList.concat(cocktails),\n            });\n        }\n    }\n\n    cancel = () => {\n        this.setState({\n            cocktails: [],\n            isLoaded: false,\n            time1: '',\n            time2: '',\n            time3: '',\n            time4: '',\n        })\n    }\n\n    //Todo\n    deleteDrink = (index) => {\n        let { cocktails } = this.state;\n        console.log(\"Deleting: \" + index);\n        let deleteIndex = 0;\n\n        for (let i = 0; i < cocktails.length; ++i) {\n            if (cocktails[i].index === index) {\n                console.log('Found drink at ' + i);\n                deleteIndex = i;\n                break;\n            }\n        }\n\n        cocktails.splice(deleteIndex, 1);\n        this.setState({\n            cocktails: cocktails,\n        })\n    }\n    //Todo\n    saveMachine = () => {\n        let { cocktails, machine } = this.state;\n        // this.setState({ isLoaded: !this.state.isLoaded, machine: 'Select' })\n        console.log(cocktails);\n        cocktails.forEach(function (v) { delete v.index });\n        let alcoholList = [];\n        let mixerList = [];\n        // drinkList.forEach();\n        let finishedJSON = [];\n        for (let i = 0; i < 4; ++i) {\n            alcoholList.push(this.state[`alc${i + 1}`]);\n            mixerList.push(this.state[`mix${i + 1}`])\n            let curObj = {};\n            curObj.alcohol = this.state[`alc${i + 1}`];\n            let coc = [];\n            cocktails.forEach(cocktail => {\n                console.log(cocktail.mixer.name);\n                if (cocktail.alcohol.name === curObj.alcohol) {\n                    coc.push(cocktail);\n                    cocktail.alcohol.container = i;\n                }\n                if (cocktail.mixer.name === this.state[`mix${i + 1}`]) {\n                    cocktail.mixer.time = parseFloat(this.state[`time${i + 1}`]);\n                    cocktail.mixer.container = i;\n                }\n            });\n            curObj.cocktails = coc;\n            finishedJSON.push(curObj);\n        }\n        console.log(finishedJSON);\n        const jsonString = JSON.stringify(finishedJSON);\n        const alcString = JSON.stringify(alcoholList);\n        const mixString = JSON.stringify(mixerList);\n        console.log(alcString);\n        console.log(mixString);\n        axios.post(`/api/cocktails/${machine}`, {\n            cocktails: jsonString\n        })\n            .then((res) => {\n                console.log(res.data);\n                this.cancel();\n                this.setMessage('Cocktails added');\n\n                axios.post(`/api/machines/${machine}`, {\n                    alcohol: alcString,\n                    mixer: mixString,\n                })\n                    .then((res) => {\n                        console.log(res.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    })\n            })\n    }\n\n\n    fieldInput = (e) => {\n\n        let { machineList } = this.state;\n        let machineID = e.target.value;\n        if (machineID === 'Select') {\n            this.setState({\n                machine: 'Select',\n                alc1: '',\n                alc2: '',\n                alc3: '',\n                alc4: '',\n                mix1: '',\n                mix2: '',\n                mix3: '',\n                mix4: '',\n                time1: '',\n                time2: '',\n                time3: '',\n                time4: '',\n            })\n        }\n        else {\n            this.getMachines();\n            this.setState({ machine: machineID, cocktails: [] });\n            for (let i = 0; i < machineList.length; i++) {\n                if (machineList[i].id === parseInt(machineID)) {\n                    for (let j = 0; j < 4; j++) {\n                        this.setState({\n                            [`alc${j + 1}`]: machineList[i].alcohol[j].name,\n                            [`mix${j + 1}`]: machineList[i].mixer[j].name,\n                        })\n                    }\n                }\n\n            }\n        }\n    }\n\n    inputHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    render() {\n        const { machineList, cocktails } = this.state;\n\n        let buttons =\n            <div className=\"row mt-4 justify-content-center\">\n                <button onClick={this.cancel} className=\" btn btn-primary btn-sm col-sm-1 mr-4\">Cancel</button>\n                <button onClick={this.addDrinkComponent} className=\" btn btn-primary btn-sm col-sm-1 mr-4\">Add Cocktail</button>\n                <button onClick={this.saveMachine} className=\"btn btn-primary btn-lsm col-sm-1 mr-4\">Save</button>\n            </div>\n\n        if (cocktails.length == 0)\n            buttons =\n                <div className=\"row mt-4 justify-content-center\">\n                    <button onClick={this.generateDrinks} className=\" btn btn-primary btn-sm col-sm-1 mr-4\">Apply</button>\n                </div>\n\n        let alcArray = [];\n        let mixArray = [];\n        for (let i = 1; i <= 4; ++i) {\n            alcArray.push(this.state[`alc${i}`])\n            mixArray.push(this.state[`mix${i}`])\n        }\n        const drinks = cocktails.map((cocktail, i) => {\n            return (\n                <div className=\"col\" key={cocktail.index}>\n                    <DrinkComponent\n                        name={cocktail.name}\n                        alcohol={cocktail.alcohol.name}\n                        alcArray={alcArray}\n                        mixer={cocktail.mixer.name}\n                        mixArray={mixArray}\n                        price={cocktail.price}\n                        image={cocktail.image}\n                        parent={this}\n                        index={cocktail.index}\n                    />\n                </div>\n            )\n        })\n\n\n        return (\n            <div className=\"container\">\n                <div className=\"border-bottom border-top mt-3 border-info pt-4 pb-4\">\n                    <select onChange={(e) => { this.fieldInput(e) }} value={this.state.machine}>\n                        <option value=\"Select\">Select</option>\n                        {machineList.map((machine) => {\n                            return (\n                                <option key={machine.id} value={machine.id}>\n                                    {\"Machine \" + machine.id}\n                                </option>\n                            );\n                        })}\n                    </select>\n                    <div className=\"row\">\n                        <div className=\"col\">Alcohol Container 1</div>\n                        <div className=\"col\">Alcohol Container 2</div>\n                        <div className=\"col\">Alcohol Container 3</div>\n                        <div className=\"col\">Alcohol Container 3</div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\"><input value={this.state.alc1} disabled={this.state.isLoaded} name='alc1' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.alc2} disabled={this.state.isLoaded} name='alc2' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.alc3} disabled={this.state.isLoaded} name='alc3' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.alc4} disabled={this.state.isLoaded} name='alc4' onChange={this.inputHandler} /></div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">Mixer Container 1</div>\n                        <div className=\"col\">Mixer Container 2</div>\n                        <div className=\"col\">Mixer Container 3</div>\n                        <div className=\"col\">Mixer Container 3</div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\"><input value={this.state.mix1} disabled={this.state.isLoaded} name='mix1' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.mix2} disabled={this.state.isLoaded} name='mix2' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.mix3} disabled={this.state.isLoaded} name='mix3' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.mix4} disabled={this.state.isLoaded} name='mix4' onChange={this.inputHandler} /></div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">Mixer 1 Pour Time</div>\n                        <div className=\"col\">Mixer 2 Pour Time</div>\n                        <div className=\"col\">Mixer 3 Pour Time</div>\n                        <div className=\"col\">Mixer 4 Pour Time</div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\"><input value={this.state.time1} disabled={!this.state.isLoaded} name='time1' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.time2} disabled={!this.state.isLoaded} name='time2' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.time3} disabled={!this.state.isLoaded} name='time3' onChange={this.inputHandler} /></div>\n                        <div className=\"col\"><input value={this.state.time4} disabled={!this.state.isLoaded} name='time4' onChange={this.inputHandler} /></div>\n                    </div>\n                    <div className=\"row mt-3\">\n                        <div className=\"col h1 text-danger text-center\">\n                            {this.state.message}\n                        </div>\n                    </div>\n                </div>\n                {buttons}\n                <div>\n                    <div className=\"row\">\n                        {drinks}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Drinks;\n","import React, { Component } from 'react';\nimport './login-signup.css'\nimport axios from 'axios';\n// import { connect } from \"react-redux\";\n// import { setToken } from \"./actions/tokenActions\";\n\n// const mapStateToProps = state => {\n//     return { token: state.token };\n// };\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         setToken: (token) => dispatch(setToken(token)),\n//     };\n// }\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            message: null,\n        }\n\n    }\n\n    setMessage = (message) => {\n        this.setState({\n            message: message,\n        });\n\n        setTimeout(() => {\n            this.setState({\n                message: null,\n            });\n        }, 3000)\n    }\n\n    emailHandler = (e) => {\n        this.setState({\n            email: e.target.value,\n        });\n    }\n\n    passwordHandler = (e) => {\n        this.setState({\n            password: e.target.value,\n        });\n    }\n\n    submitHandler = (e) => {\n        let { email, password } = this.state;\n        axios.post('/api/users', {\n            email: email,\n            password: password,\n        })\n            .then(res => {\n                this.props.setToken(res.data.token);\n                this.props.setDisplay(parseInt('2'));\n            })\n            .catch(err => {\n                console.log(err);\n                this.setMessage('Invalid email/password');\n            });\n\n        e.preventDefault();\n    }\n\n    render() {\n        return (\n\n            <div className=\"container mt-5 p-5 border rounded\">\n                <div className=\"row\">\n                    <div className=\"col-sm text-center h2\">\n                        Login\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm\">\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Email</span>\n                            </div>\n                            <input type=\"text\" value={this.state.email} onChange={this.emailHandler} className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm\">\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Password</span>\n                            </div>\n                            <input type=\"password\" value={this.state.password} onChange={this.passwordHandler} className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm\">\n                        <button type=\"submit\" onClick={this.submitHandler} className=\"btn btn-primary btn-lg float-right\">Login</button>\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm mt-3 text-danger h2 text-center\">\n                        {this.state.message}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\nexport default Login;\n//export default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\nimport './login-signup.css';\nimport axios from 'axios';\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            Email: '',\n            Password: '',\n            ConfirmPswrd: '',\n            PswrdError: false,\n            UserId: '',\n        }\n\n    }\n\n    registerUser = () => {\n        let { Password, ConfirmPswrd, PswrdError, Email } = this.state;\n        if (Password === ConfirmPswrd) {\n            console.log(Password + ConfirmPswrd)\n            axios.post('/signup', {\n                params: {\n                    email: Email,\n                    password: Password,\n                }\n            })\n                //    axios.post(`/signup?email=${Email}&password=${Password}`)\n                .then((networkresponse) => {\n                    let userId = networkresponse.data;\n                    this.setState({\n                        UserId: userId,\n                    })\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n        }\n        else {\n            PswrdError = true;\n            console.log(\"Password do not match \" + PswrdError);\n        }\n\n\n    }\n\n    render() {\n        return (\n            <div className=\"SignUpFrame\">\n                {this.state.UserId}\n                Email\n                <span style={{ display: 'block' }}>\n                    <input value={this.state.Email} onChange={(e) => {\n                        this.setState({ Email: e.target.value })\n                    }} />\n                </span>\n                Password\n                <span style={{ display: 'block' }}>\n                    <input type='password' value={this.state.Password} onChange={(e) => {\n                        this.setState({ Password: e.target.value })\n                    }} />\n                </span>\n                Confirm Password\n                <span style={{ display: 'block' }}>\n                    <input type='password' value={this.state.ConfirmPswrd} onChange={(e) => {\n                        this.setState({ ConfirmPswrd: e.target.value })\n                    }} />\n                </span>\n                <button onClick={this.registerUser}>Register</button>\n            </div>\n        )\n    }\n\n}\nexport default Signup;","import React, { Component } from 'react';\n//import { connect } from \"react-redux\";\n//import { setToken } from \"./actions/tokenActions\";\nimport './App.css';\nimport Drinks from './Drinks.jsx';\nimport Login from './Login.jsx';\nimport Signup from './Signup.jsx';\n\n\n\n// const mapStateToProps = state => {\n//   return {token: state.usertoken.token };\n// }\n\n// function mapDispatchToProps(dispatch) {\n//   return {setToken: (token) => dispatch(setToken(token))};\n// }\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      token: '',\n      screen: 0,\n      user: null,\n    }\n  }\n\n  setUser = (user) => {\n    this.setState({\n      user: user,\n    })\n  }\n  setToken = (token) =>{\n    console.log(\"Token from child: \" + token);\n    this.setState({\n      token: token,\n    });\n  }\n  setDisplay = (display) =>{\n    console.log(\"Display from child: \" + display);\n    this.setState({\n      screen: display,\n    })\n  }\n\n  render() {\n    let { screen } = this.state;\n    let display;\n\n    // eslint-disable-next-line default-case\n    switch (screen) {\n      case 0:\n        display = <Login setToken={this.setToken} setDisplay={this.setDisplay} />;\n        break;\n      case 1:\n        display = <Signup />;\n        break;\n      case 2:\n        display = <Drinks userToken={this.state.token}/>\n        break;\n    }\n\n    return (\n      <div>\n        {display}\n      </div>\n    );\n  }\n}\nexport default App;\n//export default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}